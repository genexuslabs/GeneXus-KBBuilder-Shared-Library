<?xml version="1.0" encoding="utf-8" ?>
<Project DefaultTargets="ShowTargets" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<PropertyGroup>
		<!-- Path of GeneXus installation -->
		<GX_PROGRAM_DIR Condition="'$(GX_PROGRAM_DIR)'==''"></GX_PROGRAM_DIR>
	</PropertyGroup>

	<Import Project="$(GX_PROGRAM_DIR)\Imports.targets" />

    <Target Name="ShowTargets">
        <Message Text="ConfigureDataStore" />
        <Message Text="SetJavaEnvProperties" />
        <Message Text="ConfigureAndroidSDKPath" />
        <Message Text="SetMobileCompilationMode" />
        <Message Text="CloseKB" />
    </Target>

    <Target Name="AvoidDatastoreConnections">
        <OpenKnowledgeBase Directory="$(localKbPath)" />
        <SetActiveEnvironment EnvironmentName="$(EnvironmentName)" />
        <SetEnvironmentProperty Name="Keep GAM database updated" Value="false" />
        <SetEnvironmentProperty Name="Deploy business processes on build" Value="No" />
        <SetEnvironmentProperty Name="Populate Data" Value="false" />
        <SetGeneratorProperty Generator="Default" Name="Reorganize server tables" Value="No" />
        <SetGeneratorProperty Generator="Default" Name="deploy to cloud" Value="No" />
        <CloseKnowledgeBase/>
    </Target>

    <Target Name="ConfigureDataStore">
        <OpenKnowledgeBase Directory="$(localKbPath)" />
        <SetActiveEnvironment EnvironmentName="$(environmentName)" />
        <!-- 
        START TRUNK
        <HasDataStore DataStoreName="Default">
            <Output TaskParameter="Found" PropertyName="DataStoreFound" />
            <Output TaskParameter="DataStoreType" PropertyName="DataStoreType" />
        </HasDataStore>
        <Error Text="The datastore with name 'Default' was not found" Condition=" '$(DataStoreFound)' == 'false' " Importance="high" />
        <Message Text="The datastore with name 'Default' was found, is of type '$(DataStoreType)'" Condition=" '$(DataStoreFound)' == 'true' " Importance="high" />
        END TRUNK
        -->
        <SetGeneratorProperty Condition="'$(dataStoreName)'=='Default'" Generator="Default" Name="Reorganize server tables" Value="Yes" />
        <SetEnvironmentProperty Condition="'$(dataStoreName)'=='GAM'" Name="Keep GAM database updated" Value="true" />
        <SetDataStoreProperty DataStore="$(dataStoreName)" Name="Database name" Value="$(dbName)" />
        <SetDataStoreProperty DataStore="$(dataStoreName)" Name="Server name" Value="$(dbServerName)" />
        <SetDataStoreProperty DataStore="$(dataStoreName)" Name="Server TCP/IP port" Value="$(dbServerPort)" />
        <SetDataStoreProperty Condition="'$(dataStoreName)'=='Default' AND '$(Generator)'=='.NET' AND '$(DataSource)'=='SQL Server'" DataStore="Default" Name="Use trusted connection" Value="No" />
        <SetDataStoreProperty DataStore="$(dataStoreName)" Name="User id" Value="$(dbServerUser)" />
        <SetDataStoreProperty DataStore="$(dataStoreName)" Name="User password" Value="$(dbServerPass)" />
        <SetDataStoreProperty Condition="'$(dataStoreName)'=='Default' AND '$(Generator)'=='Java'" DataStore="Default" Name="Use custom JDBC URL" Value="False" />
    </Target>

    <Target Name="SetJavaEnvProperties">
        <OpenKnowledgeBase Directory="$(localKbPath)" />
        <SetActiveEnvironment EnvironmentName="$(EnvironmentName)" />
        <!-- Java properties -->
        <SetGeneratorProperty Generator="Default" Name="servlet directory" Value="$(ServletDir)" />
        <SetGeneratorProperty Generator="Default" Name="static content directory seen from client" Value="$(StaticDir)" />
        <SetGeneratorProperty Generator="Default" Name="Compiler Path" Value="$(JavaPath)\javac.exe" />
        <SetDataStoreProperty DataStore="Default" Name="Use custom JDBC URL" Value="False" />
        <SetGeneratorProperty Generator="Default" Name="Interpreter Path" Value="$(JavaPath)\java.exe" />
        <SetGeneratorProperty Generator="Default" Name="JDK_DIR_JAVA" Value="$(JavaPath)\..\" ContinueOnError="WarnAndContinue"/>
        <SetGeneratorProperty Condition="$(TomcatVersionName) != ''" Generator="Default" Name="TOMCAT_VERSION" Value="$(TomcatVersionName)" ContinueOnError="WarnAndContinue"/>
        <SetGeneratorProperty Condition="$(JDBClogFile) == ''" Generator="Default" Name="Log JDBC Activity" Value="No" />
        <SetGeneratorProperty Condition="$(JDBClogFile) != ''" Generator="Default" Name="Log JDBC Activity" Value="Yes" />
        <SetGeneratorProperty Condition="$(JDBClogFile) != ''" Generator="Default" Name="JDBC log file" Value="$(JDBClogFile)" />
		<CloseKnowledgeBase/>
    </Target>

    <Target Name="ConfigureAndroidSDKPath">
        <OpenKnowledgeBase Directory="$(localKbPath)" />
        <!-- 
        START TRUNK
        <HasGenerator GeneratorName="Frontend">
            <Output TaskParameter="Found" PropertyName="GeneratorFound" />
            <Output TaskParameter="GeneratorType" PropertyName="GeneratorType" />
            <Output TaskParameter="UserInterface" PropertyName="GeneratorUserInterface" />
            <Output TaskParameter="Language" PropertyName="GeneratorLanguage" />
        </HasGenerator>
        <Message Text="The generator with name 'Frontend' was not found" Condition=" '$(GeneratorFound)' == 'false' " Importance="high" />
        <Message Text="The generator with name 'Frontend' was found, is of type '$(GeneratorType)', generates '$(GeneratorLanguage)' for '$(GeneratorUserInterface)'" Condition=" '$(GeneratorFound)' == 'true' " Importance="high" />
        <SetGeneratorProperty Condition="'$(GeneratorFound)'=='true'" Generator="Frontend" Name="ANGULAR_GENERATION_MODE" Value="Distribution" />
        END TRUNK
        -->
        <SetGeneratorProperty Generator="Frontend" Name="Android SDK directory" Value="$(androidSDKpath)" />
		<CloseKnowledgeBase/>
    </Target>

    <Target Name="SetMobileCompilationMode">
        <OpenKnowledgeBase Directory="$(localKbPath)" />
        <SetGeneratorProperty Generator="Frontend" Name="ANGULAR_GENERATION_MODE" Value="Distribution" ContinueOnError="WarnAndContinue"/> 
        <!-- 
        START TRUNK
        <HasGenerator GeneratorName="Frontend">
            <Output TaskParameter="Found" PropertyName="GeneratorFound" />
            <Output TaskParameter="GeneratorType" PropertyName="GeneratorType" />
            <Output TaskParameter="UserInterface" PropertyName="GeneratorUserInterface" />
            <Output TaskParameter="Language" PropertyName="GeneratorLanguage" />
        </HasGenerator>
        <Message Text="The generator with name 'Frontend' was not found" Condition=" '$(GeneratorFound)' == 'false' " Importance="high" />
        <Message Text="The generator with name 'Frontend' was found, is of type '$(GeneratorType)', generates '$(GeneratorLanguage)' for '$(GeneratorUserInterface)'" Condition=" '$(GeneratorFound)' == 'true' " Importance="high" />
        <SetGeneratorProperty Condition="'$(GeneratorFound)'=='true'" Generator="Frontend" Name="ANGULAR_GENERATION_MODE" Value="Distribution" />
        END TRUNK
        -->
        <CloseKnowledgeBase/>
    </Target>
    
    <Target Name="CloseKB">
		<OpenKnowledgeBase Directory="$(localKbPath)"/>
		<CloseKnowledgeBase/>
    </Target>
   
</Project>